(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{224:function(a,t,e){"use strict";e.r(t);var s=e(0),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"_01-输入url到页面呈现发生了什么？——网络篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-输入url到页面呈现发生了什么？——网络篇","aria-hidden":"true"}},[a._v("#")]),a._v(" 01: 输入URL到页面呈现发生了什么？——网络篇")]),a._v(" "),e("p",[a._v("我们在浏览器输入：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("https://www.baidu.com\n")])])]),e("h3",{attrs:{id:"网络请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 网络请求")]),a._v(" "),e("h4",{attrs:{id:"_1-构建请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 构建请求")]),a._v(" "),e("p",[a._v("浏览器会构建请求行:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 请求方法是GET，路径为根路径，HTTP协议版本为1.1\nGET / HTTP/1.1\n")])])]),e("h4",{attrs:{id:"_2-查找强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-查找强缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 查找强缓存")]),a._v(" "),e("p",[a._v("先检查强缓存，如果命中直接使用，否则进入下一步。")]),a._v(" "),e("h4",{attrs:{id:"_3-dns解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns解析","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. DNS解析")]),a._v(" "),e("p",[a._v("由于我们输入的是域名，而数据包是通过IP地址传给对方的。因此我们需要得到域名对应的IP地址。这个过程需要依赖一个服务系统，这个系统将域名和 IP 一一映射，我们将这个系统就叫做DNS（域名系统）。得到具体 IP 的过程就是DNS解析。")]),a._v(" "),e("p",[a._v("当然，值得注意的是，浏览器提供了DNS数据缓存功能。即如果一个域名已经解析过，那会把解析的结果缓存下来，下次处理直接走缓存，不需要经过 DNS解析。")]),a._v(" "),e("p",[a._v("另外，如果不指定端口的话，默认采用对应的 IP 的 80 端口。")]),a._v(" "),e("h4",{attrs:{id:"_4-建立-tcp-连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-建立-tcp-连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 4. 建立 TCP 连接")]),a._v(" "),e("blockquote",[e("p",[a._v("Chrome 在同一个域名下要求同时最多只能有 6 个 TCP 连接，超过 6 个的话剩下的请求就得等待。")])]),a._v(" "),e("p",[a._v("假设现在不需要等待，我们进入了 TCP 连接的建立阶段。首先解释一下什么是 TCP:")]),a._v(" "),e("p",[e("code",[a._v("TCP（Transmission Control Protocol，传输控制协议）")]),a._v("是一种面向连接的、可靠的、基于字节流的传输层通信协议。")]),a._v(" "),e("p",[a._v("建立 TCP连接经历了下面三个阶段:")]),a._v(" "),e("ul",[e("li",[a._v("通过三次握手(即总共发送3个数据包确认已经建立连接)建立客户端和服务器之间的连接。")]),a._v(" "),e("li",[a._v("进行数据传输。这里有一个重要的机制，就是接收方接收到数据包后必须要向发送方确认, 如果发送方没有接到这个确认的消息，就判定为数据包丢失，并重新发送该数据包。当然，发送的过程中还有一个优化策略，就是把大的数据包拆成一个个小包，依次传输到接收方，接收方按照这个小包的顺序把它们组装成完整数据包。")]),a._v(" "),e("li",[a._v("断开连接的阶段。数据传输完成，现在要断开连接了，通过四次挥手来断开连接。")])]),a._v(" "),e("blockquote",[e("p",[a._v("你应该明白 TCP 连接通过什么手段来保证数据传输的可靠性，一是三次握手确认连接，二是数据包校验保证数据到达接收方，三是通过四次挥手断开连接。")])]),a._v(" "),e("h4",{attrs:{id:"_5-发送-http-请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-发送-http-请求","aria-hidden":"true"}},[a._v("#")]),a._v(" 5.发送 HTTP 请求")]),a._v(" "),e("p",[e("code",[a._v("TCP连接建立完毕")]),a._v("，浏览器可以和服务器开始通信，即开始发送 HTTP 请求。浏览器发 HTTP 请求要携带三样东西:请求行、请求头和请求体。")]),a._v(" "),e("p",[a._v("首先，浏览器会向服务器发送请求行,关于请求行， 我们在这一部分的第一步就构建完了，贴一下内容:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 请求方法是GET，路径为根路径，HTTP协议版本为1.1\nGET / HTTP/1.1\n")])])]),e("p",[a._v("结构很简单，由请求方法、请求URI和HTTP版本协议组成。")]),a._v(" "),e("p",[a._v("同时也要带上请求头，比如我们之前说的Cache-Control、If-Modified-Since、If-None-Match都由可能被放入请求头中作为缓存的标识信息。当然了还有一些其他的属性，列举如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9\nCache-Control: no-cache\nConnection: keep-alive\nCookie: /* 省略cookie信息 */\nHost: www.baidu.com\nPragma: no-cache\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1\n")])])]),e("p",[a._v("最后是请求体，请求体只有在POST方法下存在，常见的场景是表单提交。")]),a._v(" "),e("h3",{attrs:{id:"网络响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络响应","aria-hidden":"true"}},[a._v("#")]),a._v(" 网络响应")]),a._v(" "),e("p",[a._v("HTTP 请求到达服务器，服务器进行对应的处理。最后要把数据传给浏览器，也就是返回网络响应。")]),a._v(" "),e("p",[a._v("跟请求部分类似，网络响应具有三个部分:响应行、响应头和响应体。")]),a._v(" "),e("p",[a._v("响应行类似下面这样:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("HTTP/1.1 200 OK\n")])])]),e("p",[a._v("由HTTP协议版本、状态码和状态描述组成。")]),a._v(" "),e("p",[a._v("响应头包含了服务器及其返回数据的一些信息, 服务器生成数据的时间、返回的数据类型以及对即将写入的Cookie信息。")]),a._v(" "),e("p",[a._v("举例如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Cache-Control: no-cache\nConnection: keep-alive\nContent-Encoding: gzip\nContent-Type: text/html;charset=utf-8\nDate: Wed, 04 Dec 2019 12:29:13 GMT\nServer: apache\nSet-Cookie: rsv_i=f9a0SIItKqzv7kqgAAgphbGyRts3RwTg%2FLyU3Y5Eh5LwyfOOrAsvdezbay0QqkDqFZ0DfQXby4wXKT8Au8O7ZT9UuMsBq2k; path=/; domain=.baidu.com\n")])])]),e("blockquote",[e("p",[a._v("响应完成之后怎么办？TCP 连接就断开了吗？不一定。这时候要判断Connection字段, 如果请求头或响应头中包含Connection: Keep-Alive，表示建立了持久连接，这样TCP连接会一直保持，之后请求统一站点的资源会复用这个连接。")])]),a._v(" "),e("p",[a._v("否则断开TCP连接, 请求-响应流程结束。")]),a._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("p",[a._v("到此，我们来总结一下主要内容，也就是浏览器端的网络请求过程")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://s1.ax1x.com/2020/05/24/tpADW4.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=r.exports}}]);