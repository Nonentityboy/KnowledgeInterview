(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{215:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("h3",{attrs:{id:"动态规划的⼀般流程-就是三步："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划的⼀般流程-就是三步：","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态规划的⼀般流程,就是三步：")]),t._v(" "),r("p",[t._v("暴⼒的递归解法 -> 带备忘录的递归解法 -> 迭代的动态规划解法。")]),t._v(" "),r("h3",{attrs:{id:"就思考流程来说，就分为⼀下⼏步："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#就思考流程来说，就分为⼀下⼏步：","aria-hidden":"true"}},[t._v("#")]),t._v(" 就思考流程来说，就分为⼀下⼏步：")]),t._v(" "),r("p",[t._v("找到状态和选择 -> 明确 dp 数组/函数的定义 -> 寻找状态之间的关系。")]),t._v(" "),r("p",[t._v("动态规划的穷举有点特别，因为这类问题存在「重叠⼦问题」，如果\n暴⼒穷举的话效率会极其低下，所以需要「备忘录」或者「DP table」来优\n化穷举过程，避免不必要的计算。")])])}),[],!1,null,null,null);a.default=s.exports}}]);